#ifndef CALL_GRAPH_MATCH_FUNCTION_NAME_HASH_H_
#define CALL_GRAPH_MATCH_FUNCTION_NAME_HASH_H_

#include "third_party/zynamics/bindiff/call_graph_match.h"

namespace security::bindiff {

// Matches functions based on a hash of their names. Only real names are
// considered, names which have been auto-generated by the disassembler are not
// used. This is one of the few algorithms that can match imported functions,
// i.e. functions that do not have an actual body in the binary.
class MatchingStepName : public MatchingStep {
 public:
  MatchingStepName()
      : MatchingStep("function: name hash matching", "Function: Name Hash") {}

  bool FindFixedPoints(const FlowGraph* primary_parent,
                       const FlowGraph* secondary_parent,
                       FlowGraphs& flow_graphs_1, FlowGraphs& flow_graphs_2,
                       MatchingContext& context, MatchingSteps& matching_steps,
                       const MatchingStepsFlowGraph& default_steps);

 private:
  void GetUnmatchedFlowGraphsByNameHash(const FlowGraphs& flow_graphs,
                                        FlowGraphIntMap& flow_graphs_map);
};

}  // namespace security::bindiff

#endif  // CALL_GRAPH_MATCH_FUNCTION_NAME_HASH_H_
